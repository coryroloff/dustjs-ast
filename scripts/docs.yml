---
- class: Block
  extends: Node
  description: A Block is defined as a Node with a body (e.g. children).
  properties:
  - name: body
    type: Array<Node>

- class: Buffer
  extends: Node
  properties:
  - name: value
    type: String

- class: Comment
  extends: Node
  properties:
  - name: value
    type: String

- class: Format
  extends: Node
  properties:
  - name: value
    type: String

- class: Identifier
  extends: Node
  properties:
  - name: path
    type: Array<Key>
  - name: localContext
    type: Boolean

- class: Inline
  extends: Block

- class: Key
  extends: Node
  properties:
  - name: name
    type: String

- class: StringLiteral
  extends: Node
  properties:
  - name: value
    type: String

- class: NumericLiteral
  extends: Node
  properties:
  - name: value
    type: Number

- class: NamedBlock
  extends: Block
  properties:
  - name: key
    type: Key

- class: Node
  properties:
  - name: type
    type: String
  - name: loc.start.line
    type: Number
  - name: loc.start.column
    type: Number
  - name: loc.end.line
    type: Number
  - name: loc.end.column
    type: Number
  constants:
  - name: Block
    type: String
  - name: Buffer
    type: String
  - name: Comment
    type: String
  - name: Identifier
    type: String
  - name: Inline
    type: String
  - name: Key
    type: String
  - name: StringLiteral
    type: String
  - name: NumericLiteral
    type: String
  - name: NamedBlock
    type: String
  - name: Param
    type: String
  - name: Partial
    type: String
  - name: Raw
    type: String
  - name: Reference
    type: String
  - name: Section
    type: String
  - name: Special
    type: String
  - name: Template
    type: String

- class: Param
  extends: Node
  properties:
  - name: key
    type: Key
  - name: value
    type: Identifier, Inline, NumericLiteral

- class: Partial
  extends: Node
  description: A Partial is defined as matching a opening brace followed by a > plus anything that matches with key or inline plus context plus params followed by slash and closing brace.
  properties:
  - name: kind
    type: String
  - name: value
    type: Key, Inline
  - name: context
    type: ?Identifier
  - name: params
    type: Array<Param>
  - name: format.afterStart
    type: ?Format
  - name: format.beforeParam
    type: Array<Format>
  - name: format.beforeEnd
    type: ?Format
  constants:
  - name: Partial
    type: String
    description: ">"
  - name: Block
    type: String
    description: "+"

- class: Raw
  extends: Node
  properties:
  - name: value
    type: String
    description: "{\\`**\\_\\_\\_hello, world!\\_\\_\\_**\\`}"

- class: Reference
  extends: Node
  properties:
  - name: id
    type: Identifier
    description: "{**reference**}"
  - name: filters
    type: Array<Key>
    description: "{reference&#124;**js**&#124;**s**}"

- class: Section
  extends: Block
  description: "Note: A self-closed section will always have an empty body. Sections with start and end tags will always have at least one Block in the body."
  properties:
  - name: kind
    type: String
    description: "{**#**section}{/section}"
  - name: id
    type: Identifier
    description: "{#**section**}{/section}"
  - name: context
    type: ?Identifier
    description: "{#section:**one.two.three**}{/section}"
  - name: params
    type: Array<Param>
    description: "{#section **param1=1** **param2=2** **param3=3**}"
  - name: format.startTagAfterStart
    type: ?Format
    description: "{#**___**section}{/section}"
  - name: format.startTagBeforeParam
    type: Array<Format>
    description: "{#section**___**param1=1**___**param2=2**___**param3=3}{/section}"
  - name: format.startTagBeforeEnd
    type: ?Format
    description: "{#section**___**}{/section} and {#section**___**/}"
  - name: format.endTagAfterStart
    type: ?Format
    description: "{#section}{/**___**section}"
  - name: format.endTagBeforeEnd
    type: ?Format
    description: "{#section}{/section**___**}"
  constants:
  - name: Standard
    type: String
    description: "#"
  - name: Exists
    type: String
    description: "?"
  - name: NotExists
    type: String
    description: "^"
  - name: InlinePartial
    type: String
    description: "<"
  - name: Block
    type: String
    description: "+"
  - name: Helper
    type: String
    description: "@"
  - name: Pragma
    type: String
    description: "%"

- class: Special
  extends: Node
  properties:
  - name: key
    type: Key

- class: Template
  extends: Block
  properties:
  - name: tokens
    type: Array<Token>

- class: Token
  properties:
  - name: type
    type: String
  - name: value
    type: String
  constants:
  - name: Comment
    type: String
  - name: Key
    type: String
  - name: StringLiteral
    type: String
  - name: NumericLiteral
    type: String
  - name: Punctuator
    type: String
  - name: Format
    type: String
  - name: Buffer
    type: String
  - name: Raw
    type: String
...
